# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import database_pb2 as database__pb2


class DataBaseStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUser = channel.unary_unary(
                '/DataBase/GetUser',
                request_serializer=database__pb2.RequestUserInfo.SerializeToString,
                response_deserializer=database__pb2.ResponseUserInfo.FromString,
                )
        self.NewUser = channel.unary_unary(
                '/DataBase/NewUser',
                request_serializer=database__pb2.RequestNewUSer.SerializeToString,
                response_deserializer=database__pb2.BaseResponse.FromString,
                )
        self.ModifyUserPassword = channel.unary_unary(
                '/DataBase/ModifyUserPassword',
                request_serializer=database__pb2.RequestModifyUserPassword.SerializeToString,
                response_deserializer=database__pb2.BaseResponse.FromString,
                )
        self.ModifyUserInfo = channel.unary_unary(
                '/DataBase/ModifyUserInfo',
                request_serializer=database__pb2.RequestModifyUserInfo.SerializeToString,
                response_deserializer=database__pb2.BaseResponse.FromString,
                )
        self.DeleteUser = channel.unary_unary(
                '/DataBase/DeleteUser',
                request_serializer=database__pb2.RequestDeleteUser.SerializeToString,
                response_deserializer=database__pb2.BaseResponse.FromString,
                )


class DataBaseServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyUserPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ModifyUserInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DataBaseServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=database__pb2.RequestUserInfo.FromString,
                    response_serializer=database__pb2.ResponseUserInfo.SerializeToString,
            ),
            'NewUser': grpc.unary_unary_rpc_method_handler(
                    servicer.NewUser,
                    request_deserializer=database__pb2.RequestNewUSer.FromString,
                    response_serializer=database__pb2.BaseResponse.SerializeToString,
            ),
            'ModifyUserPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyUserPassword,
                    request_deserializer=database__pb2.RequestModifyUserPassword.FromString,
                    response_serializer=database__pb2.BaseResponse.SerializeToString,
            ),
            'ModifyUserInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ModifyUserInfo,
                    request_deserializer=database__pb2.RequestModifyUserInfo.FromString,
                    response_serializer=database__pb2.BaseResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=database__pb2.RequestDeleteUser.FromString,
                    response_serializer=database__pb2.BaseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'DataBase', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DataBase(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/GetUser',
            database__pb2.RequestUserInfo.SerializeToString,
            database__pb2.ResponseUserInfo.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/NewUser',
            database__pb2.RequestNewUSer.SerializeToString,
            database__pb2.BaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModifyUserPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/ModifyUserPassword',
            database__pb2.RequestModifyUserPassword.SerializeToString,
            database__pb2.BaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ModifyUserInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/ModifyUserInfo',
            database__pb2.RequestModifyUserInfo.SerializeToString,
            database__pb2.BaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/DataBase/DeleteUser',
            database__pb2.RequestDeleteUser.SerializeToString,
            database__pb2.BaseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
